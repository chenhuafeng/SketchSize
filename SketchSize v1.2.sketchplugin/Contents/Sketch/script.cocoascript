          var onRun = function(context) {
          //@1x 尺寸
var ip4Size1X = {w:320*2, h:480*2}
var ip5Size1X = {w:320*2, h:568*2}
var ip6Size1X = {w:375*2, h:667*2}
var ip6pSize1X = {w:414*3, h:736*3}
var ipXSize1X = {w:375*3, h:812*3}
var ipXSMaxSize1X = {w:414*3, h:896*3}
var andr1Size1X = {w:240*2, h:400*2}
var andr2Size1X = {w:240*2, h:427*2}
var andr3Size1X = {w:300*2, h:450*2}
var andr4Size1X = {w:360*2, h:640*2}
var andr5Size1X = {w:540*2, h:960*2}
var andr6Size1X = {w:576*2, h:960*2}

var array1 = new Array(ip4Size1X, ip5Size1X, ip6Size1X, ip6pSize1X, andr1Size1X, andr2Size1X, andr3Size1X, andr4Size1X, andr5Size1X, andr6Size1X)
var array2 = new Array(ipXSize1X, ipXSMaxSize1X)


//全局
var kdocument = context.document                       //当前document
var kpages = kdocument.pages()                         //pages
var kcurPage = kdocument.currentPage()                 //当前page
var kartboards = kcurPage.artboards()                  //当前page的所有artboard
var kcurArtboard = kcurPage.currentArtboard()          //当前选中的artboard
if (kcurArtboard == null) {
    kdocument.showMessage('Please choose an artboard as templet');
}
else {
    kdocument.showMessage('loading...');
}
var klayers = kcurArtboard.layers()                    //当前选中artboard的所有layer

//对targetlayer以及所有子layer进行检查，如果是MSTextLayer则对其进行字体和字间距的缩放处理，如果是MSShapeGroup则对其border进行处理，如果是MSRectangleShape则对其进行圆角的缩放处理，ratio是缩放比例
function dealLayerProperties(targetlayer, ratio) {

    var frameLayer = targetlayer.frame()

    if(targetlayer.class() == MSTextLayer){

        var fontTarlayer = targetlayer.fontSize();
        var cSpacingTarlayer = targetlayer.characterSpacing();
        targetlayer.setFontSize(fontTarlayer / ratio);
        targetlayer.setCharacterSpacing(cSpacingTarlayer / ratio);

        var lineHeight = targetlayer.lineHeight();
        targetlayer.setLineHeight(lineHeight / ratio);

        frameLayer .setX(frameLayer.x())
        frameLayer .setY(frameLayer.y())
        frameLayer .setWidth(frameLayer.width() + 4)
        frameLayer .setHeight(frameLayer.height())
    }
    else if (targetlayer.class() == MSShapeGroup) {
        if (targetlayer.style().borders() != null) {
            for (var i = 0; i < targetlayer.style().borders().count(); i++) {
                var styleBorder = targetlayer.style().borders()[i];
                var borderW = styleBorder.thickness();
                styleBorder.setThickness(borderW / ratio);
            }
        }

        for (var i = 0; i < targetlayer.layers().count(); i++) {
            var shapeLayer = targetlayer.layers()[i];
            if (shapeLayer.class() == MSRectangleShape) {
                var arr = [shapeLayer.cornerRadiusString().componentsSeparatedByString('/')][0];
                if (arr.count() > 1){
                    for (var i = 0; i < arr.count(); i++) {
                        var radius = arr[i];
                        arr[i] = radius / ratio;
                    }
                    shapeLayer.setCornerRadiusString(arr.componentsJoinedByString('/'));
                }
                else {
                    var radius = shapeLayer.cornerRadiusFloat();
                    shapeLayer.setCornerRadiusFloat(radius / ratio);
                }
            }
        }

    }
    else if (targetlayer.class() == MSLayerGroup){

        for (var i = 0; i < targetlayer.layers().count(); i++) {
            var layer = targetlayer.layers()[i];
            dealLayerProperties(layer, ratio);
        }

    }
}

//将当前artboard上所有的layer等比处理后移植到新的artboard上，toArtboard是目标artboard，ratioW=kcurArtboard.w/toArtboard.w，ratioH=kcurArtboard.w.h/toArtboard.h
function copyLayers(toArtboard, ratioW, ratioH) {
    for (var i = 0; i < klayers.count(); i++) {
        var layer = klayers[i];
        var newlayer = layer.copy()
        var frameNewlayer = newlayer.frame()

        if(ratioW > ratioH) {
            var newX = frameNewlayer.x() / ratioW
            var newY = frameNewlayer.y() / ratioW + (toArtboard.frame().height() - kcurArtboard.frame().height()/ratioW)/2
            var newW = frameNewlayer.width() / ratioW
            var newH = frameNewlayer.height() / ratioW
        } else {
            var newX = frameNewlayer.x() / ratioH + (toArtboard.frame().width() - kcurArtboard.frame().width()/ratioH)/2
            var newY = frameNewlayer.y() / ratioH
            var newW = frameNewlayer.width() / ratioH
            var newH = frameNewlayer.height() / ratioH
        }

        if(Math.abs(frameNewlayer.x())<5 && Math.abs(frameNewlayer.y())<5 && Math.abs(frameNewlayer.width() - kcurArtboard.frame().width())<5 && Math.abs(frameNewlayer.height() - kcurArtboard.frame().height())<5) {
            frameNewlayer.setX(0)
            frameNewlayer.setY(0)
            frameNewlayer.setHeight(toArtboard.frame().height())
            frameNewlayer.setWidth(toArtboard.frame().width())
        }
        else {
            frameNewlayer.setX(newX)
            frameNewlayer.setY(newY)
            frameNewlayer.setWidth(newW)
            frameNewlayer.setHeight(newH)
        }

        // ratioW=375/540，0.69444
        // ratioH=667/960   0.6947
        if(ratioW < ratioH) {
            dealLayerProperties(newlayer, ratioH);
        } else {
            dealLayerProperties(newlayer, ratioW);
        }

        toArtboard.addLayers([newlayer])
    }
}

//创建新的artboard，并移植相应的layer
function newArtboard(newX, newY, newW, newH) {
    var curBoardW = kcurArtboard.frame().width()
    var curBoardH = kcurArtboard.frame().height()

    var newBoard = MSArtboardGroup.new()
    var newFrame = newBoard.frame()
    newFrame.setX(newX)
    newFrame.setY(newY)
    newFrame.setWidth(newW)
    newFrame.setHeight(newH)
    // newBoard.setName(kcurArtboard.name() + '/' + newFrame.width() + '×' + newFrame.height())
    newBoard.setName(newFrame.width() + '×' + newFrame.height() + '/' + newFrame.width() + '×' + newFrame.height() + '_' + kcurArtboard.name())

    if(newFrame.width() == 375 * 3 && newFrame.height() == 812 * 3) {
        // newBoard.setName(kcurArtboard.name() + '/' + 'iPhoneX')
        newBoard.setName('iPhone X' + '/' + newFrame.width() + '×' + newFrame.height() + '_' + kcurArtboard.name())
    }

    if(newFrame.height() == 896 * 3) {
        newBoard.setName('iPhone XS Max' + '/' + newFrame.width() + '×' + newFrame.height() + '_' + kcurArtboard.name())
    }

    copyLayers(newBoard, curBoardW/newFrame.width(), curBoardH/newFrame.height())

    var backColor = kcurArtboard. backgroundColor()
    var hasBackColor = kcurArtboard. hasBackgroundColor()
    newBoard.setBackgroundColor(backColor)
    newBoard.setHasBackgroundColor(hasBackColor)

    kcurPage.addLayers([newBoard])
}

//入口
function enter() {
    var array
    if (kcurArtboard.frame().height() / kcurArtboard.frame().width() < 2) {
        array = array1
    } else {
        array = array2
    }

    var originX = kcurArtboard.frame().x()
    var originY = kcurArtboard.frame().y() + kcurArtboard.frame().height() + 100

    for (x in array) {
        newArtboard(originX, originY, array[x].w, array[x].h)
        originX = originX + array[x].w + 100
    }

    kdocument.showMessage('Success!');
}

enter();


};
